name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install FAISS
        run: |
          pip install faiss-cpu

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check formatting with black
        run: |
          pip install black
          black --check .

      - name: Build vector DB
        run: |
          python chatbot/embeddings/6_store_in_vector_db.py --config config/config.yaml

      - name: Upload vector DB artifact
        uses: actions/upload-artifact@v4
        with:
          name: vector-db
          path: data/vector_db

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download vector DB artifact
        uses: actions/download-artifact@v4
        with:
          name: vector-db
          path: data/vector_db

      - name: Deploy to production server
        run: |
          echo "Add your deploy command here (e.g. rsync or SSH push)"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
